package com.GermanExpats.SalaryRate.service;

import com.GermanExpats.SalaryRate.entity.GermanEmployee;

import java.util.ArrayList;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import com.GermanExpats.SalaryRate.DAO.IGermanEmployeeDAO;


@Service
public class GermanEmployeeService implements IGermanEmployeeService {


    /**
     * object to have access to DAO
     */
    @Autowired
    private IGermanEmployeeDAO germanEmployeeDAO;

    /**
     * @return list of all employees from DB
     */
    @Override
    public List<GermanEmployee> getAllEmployees() {
        return germanEmployeeDAO.getAllEmployees();


    }

    /**
     * @param employeeId - each employee(line in DB) has unique ID
     * @return all information about employee based on his id
     */
    @Override
    public GermanEmployee getEmployeeById(int employeeId) {
        GermanEmployee obj = germanEmployeeDAO.getEmployeeById(employeeId);
        return obj;
    }

    /**
     * @param employee include all fields without id. Id is autogenerated. Json example:
     *                 {"date_point":"12/13/2016 14:19","age":1,"sex":"m","city":"Berlin",
     *                 "position":"test","experience_in_Europe":1,"total_experience":3,"salary":54000,
     *                 "salary_1_year_ago":48000,"first_europe_salary":48000,
     *                 "number_of_job_in_europe":1,"work_language":"test","company_size":"50-100",
     *                 "company_type":"startup","level":"Senior"}
     */
    @Override
    public void addEmployee(GermanEmployee employee) {
        germanEmployeeDAO.addEmployee(employee);
    }

    /**
     * @param employee include all fields. Line with same id in DB will be replaced.
     */
    @Override
    public void updateEmployee(GermanEmployee employee) {
        germanEmployeeDAO.updateEmployee(employee);
    }

    /**
     * @param employeeId of employee you want to delete.
     */
    @Override
    public void deleteEmployee(int employeeId) {
        germanEmployeeDAO.deleteEmployee(employeeId);
    }

    /**
     * @return last possible id from DB. Uses for testing.
     */
    @Override
    public int getLastId() {
        return germanEmployeeDAO.getLastId();
    }

}
